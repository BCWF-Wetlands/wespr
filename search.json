[{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://bcwf-wetlands.github.io/wespr/articles/calculate_wesp_scores.html","id":"calculate-wespr-scores","dir":"Articles","previous_headings":"","what":"Calculate Wespr Scores","title":"Calculate Wespr Scores","text":"wespr package installed, raw data processed using steps outlined previous vignette, can calculate Wespr scores. included example file package, can use demonstration purposes: Next convert data special wesp_site object. process validates input data, give informative errors question answered correctly. also calculates many “derived values” questions, common inputs different indicator calculations. one site input data, can select site like use — site selected default choosing first site file. normally need work internals wesp_site object quite complex, however can get overview just typing name object: can see responses loaded, flagged incomplete, derived values calculated. However, indicators yet calculated. Now, can calculate indicator scores calc_indicators() function. must assign output function back original wesp_site object, updates indicators calculated values: view site object , can see calculated indicator scores. probably want get indicator scores usable object. can get_indicator_scores(), gives us data.frame: Similarly, can extract original responses get_responses(): can also get data.frame derived values, values calculated responses, used inputs many indicators.","code":"wesp_file <- system.file(\"input_data/wetFlat_20240130.csv\", package = \"wespr\") wesp_data <- load_wesp_data(wesp_file)  head(wesp_data) site <- as.wesp_site(wesp_data, site = 1) site site <- calc_indicators(site) site ind_scores <- get_indicator_scores(site)  ind_scores get_responses(site) get_derived_values(site)"},{"path":"https://bcwf-wetlands.github.io/wespr/articles/calculate_wesp_scores.html","id":"calculating-multiple-site-scores","dir":"Articles","previous_headings":"Calculate Wespr Scores","what":"Calculating multiple site scores","title":"Calculate Wespr Scores","text":"cases wish calculate indicator scores multiple sites. need raw values site can use calculate_multi_site() function. requires data firstly loaded using load_wesp_data() function. example work flow : return dateframe values combined site within dataset provided.","code":"wesp_file <- system.file(\"input_data/wetFlat_20240130.csv\", package = \"wespr\") wesp_data <- load_wesp_data(wesp_file) calculate_multi_site(wesp_data)"},{"path":"https://bcwf-wetlands.github.io/wespr/articles/calculate_wesp_scores.html","id":"calculating-jenks-scores","dir":"Articles","previous_headings":"Calculate Wespr Scores","what":"Calculating Jenks scores","title":"Calculate Wespr Scores","text":"Another method step entire process calculating site scores, assigning high medium low catergory use calculate_jenks_score() function. function requires data loaded using load_wesp_data() function . calculate indicator scores site, normalize data across sites given ecosystem function benefit calcualte Jenks breaks value assign high, medium low categories. process also flag unusual results, values across sites. Note calculate_jenks_score() function includes steps described calculate site scores. example workflow using function : currently development requires finer regional assessment incorporated.","code":"wesp_file <- system.file(\"input_data/wetFlat_20240130.csv\", package = \"wespr\") wesp_data <- load_wesp_data(wesp_file) calculate_jenks_score(wesp_data, out_dir = \"temp\",  out_name = \"wesp_scores.csv\")"},{"path":"https://bcwf-wetlands.github.io/wespr/articles/calculate_wesp_scores.html","id":"anatomy-of-the-wesp_site-object","dir":"Articles","previous_headings":"Calculate Wespr Scores","what":"Anatomy of the wesp_site object","title":"Calculate Wespr Scores","text":"mentioned , large, complex object, almost always best interact wesp_site object via provided functions. functionality missing please open issue. four elements: first three (site_name, questions, derived_values) populated wesp_site object created, indicators element just placeholder, calc_indicators() run:","code":"length(site) names(site) site$site_name  # The questions element is large and complex, so we will just show the names: names(site$questions)  site$derived_values  site$indicators"},{"path":[]},{"path":"https://bcwf-wetlands.github.io/wespr/articles/calculate_wesp_scores.html","id":"updating-internal-data","dir":"Articles","previous_headings":"Calculate Wespr Scores > Development","what":"Updating internal data","title":"Calculate Wespr Scores","text":"wespr package contains two internal datasets facilitate question validation indicator calculations: question_metadata indicator_weightings. updated : Update Google Sheet : https://docs.google.com/spreadsheets/d/1l2h7Z65H5z0cKv_gvorxkT6k9LC7ZKLS/edit#gid=924841838 (need authorized edit document) Run script data-raw/internal-data.R Reload/reinstall package. Run devtools::check() make sure changes made Google Sheet haven’t broken existing behaviour. Commit changes R/sysdata.rda (file contains datasets)","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/articles/prepare-rawdata.html","id":"raw-data-imports","dir":"Articles","previous_headings":"","what":"Raw data imports","title":"Prepare data for Wespr calculations","text":"first step calculating wespr scores standarddise Quality check input data. March 2025, data collection comprised parts: - field data - collected using survey123 form - office questions - collected using survey123 form - office questions - scripted using WESP_OF github repo.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/articles/prepare-rawdata.html","id":"field-data","dir":"Articles","previous_headings":"Raw data imports","what":"Field data","title":"Prepare data for Wespr calculations","text":"Field data collected site using survey123 form. intended control data inputs standardize data collection process. comprise field stressor based questions. data exported survey123 csv file. example data file included within package testing. Note minor manual edits required make data file compatible read , .e. format datatime column. minimal future processes continually improved.","code":"field <- system.file(\"extdata/field_survey123_edited.xls\", package = \"wespr\")  #head(field)"},{"path":"https://bcwf-wetlands.github.io/wespr/articles/prepare-rawdata.html","id":"office-data","dir":"Articles","previous_headings":"Raw data imports","what":"Office data","title":"Prepare data for Wespr calculations","text":"Office data collected two part (users either post pre fieldwork, compiled part BCWF-Wetlands/WESP_OF. merged single file exported .xls file. example data file included within package testing.","code":"office <- system.file(\"extdata/scripted_office.xlsx\", package = \"wespr\")  #head(office)"},{"path":"https://bcwf-wetlands.github.io/wespr/articles/prepare-rawdata.html","id":"compiling-and-formatting-data","dir":"Articles","previous_headings":"","what":"Compiling and formatting data","title":"Prepare data for Wespr calculations","text":"data compiled formatted using combine_rawdata function. function takes field office data inputs, outputs single data frame data formatted use wespr calculations. Users need define file path field office data files, ecoregion reviewed. example define EcoP “GD” Georgia Depression. Users can define want review formatted subfiles (.e. office field data), want save final data file file overwritten choose review subfiles, written out_dir directory.","code":"#Preparing the raw data  ww <- combine_rawdata(     field_data <- system.file(\"extdata/field_survey123_edited.xls\", package = \"wespr\"),     office_data <- system.file(\"extdata/scripted_office.xlsx\", package = \"wespr\"),     EcoP = \"GD\",     write_subfiles = FALSE,     out_dir = \"input_data\",     overwrite = TRUE )  write.csv(ww, fs::path(\"input_data/wetFlat_20250325.csv\"), row.names=FALSE)"},{"path":"https://bcwf-wetlands.github.io/wespr/articles/prepare-rawdata.html","id":"quality-checking-the-data","dir":"Articles","previous_headings":"","what":"Quality checking the data","title":"Prepare data for Wespr calculations","text":"can check QA data using check_indata function. function checks data missing values, ensures data correct format.","code":"indata <- system.file(\"input_data/wetFlat_20250325.csv\", package = \"wespr\")  check_indata(indata)"},{"path":"https://bcwf-wetlands.github.io/wespr/articles/prepare-rawdata.html","id":"the-final-output","dir":"Articles","previous_headings":"","what":"The final output","title":"Prepare data for Wespr calculations","text":"example final compiled data shown, first 10 questions (rows) 6 sites (columns) shown: prepared dataset ready use wespr calculations. Detailed steps running ","code":"Question,1,2,3,4,5,6 F1_1,1,0,1,1,1,2 F1_2,0,3,3,2,0,2 F1_3,1,0,3,1,1,1 F1_4,1,4,1,1,1,3 F1_5,1,0,1,1,1,0 F1_6,1,1,1,1,1,4 F2_A1,0,0,0,0,0,1 F2_A2,0,0,0,0,0,0 F2_B1,0,1,0,0,0,0 F2_B2,1,0,1,1,1,0"},{"path":"https://bcwf-wetlands.github.io/wespr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Genevieve Perkins. Author, maintainer. Andy Teucher. Author. Don Morgan. Author. BC Wildlife Federation. Copyright holder.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Perkins G, Teucher , Morgan D (2025). wespr: Calculate ecosystem function benefit scores wetlands. R package version 0.0.0.9000, https://bcwf-wetlands.github.io/wespr/.","code":"@Manual{,   title = {wespr: Calculate ecosystem function and benefit scores for wetlands},   author = {Genevieve Perkins and Andy Teucher and Don Morgan},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://bcwf-wetlands.github.io/wespr/}, }"},{"path":"https://bcwf-wetlands.github.io/wespr/index.html","id":"wespr","dir":"","previous_headings":"","what":"Calculate ecosystem function and benefit scores for wetlands","title":"Calculate ecosystem function and benefit scores for wetlands","text":"B.C. Wildlife Federation’s Wetlands Workforce project collaboration conservation organizations First Nations working maintain monitor wetlands across British Columbia. https://bcwf.bc.ca/initiatives/wetlands-workforce/. Wetland Ecosystem Services Protocol (WESP) model standardized method assessing function value services provided wetlands. wespr R package help automate validation WESP data calculate WESP indicators reproducible manner.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate ecosystem function and benefit scores for wetlands","text":"can install development version wespr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"BCWF-Wetlands/wespr\")"},{"path":"https://bcwf-wetlands.github.io/wespr/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example usage","title":"Calculate ecosystem function and benefit scores for wetlands","text":"package loaded, can read WESP data csv, standardized format output scripts https://github.com/BCWF-Wetlands/WESP_Calculator. example format file shown, first 10 questions (rows) 6 sites (columns) shown: included example file package, can use demonstration purposes: Next convert data special wesp_site object. process validates input data, give informative errors question answered correctly. also calculates many “derived values” questions, common inputs different indicator calculations. one site input data, can select site like use — site selected default choosing first site file. normally need work internals wesp_site object quite complex, however can get overview just typing name object: can see responses loaded, flagged incomplete, derived values calculated. However, indicators yet calculated. Now, can calculate indicator scores calc_indicators() function. must assign output function back original wesp_site object, updates indicators calculated values: view site object , can see calculated indicator scores. probably want get indicator scores usable object. can get_indicator_scores(), gives us data.frame: Similarly, can extract original responses get_responses(): can also get data.frame derived values, values calculated responses, used inputs many indicators.","code":"library(wespr) Question,1,2,3,4,5,6 F1_1,1,0,1,1,1,2 F1_2,0,3,3,2,0,2 F1_3,1,0,3,1,1,1 F1_4,1,4,1,1,1,3 F1_5,1,0,1,1,1,0 F1_6,1,1,1,1,1,4 F2_A1,0,0,0,0,0,1 F2_A2,0,0,0,0,0,0 F2_B1,0,1,0,0,0,0 F2_B2,1,0,1,1,1,0 wesp_file <- system.file(\"input_data/wetFlat_20240130.csv\", package = \"wespr\") wesp_data <- load_wesp_data(wesp_file)  head(wesp_data) #> # A tibble: 6 × 102 #>   q_no  response_no site_1 site_2 site_3 site_4 site_5 site_6 site_7 site_8 #>   <chr> <chr>       <chr>   <dbl> <chr>  <chr>  <chr>  <chr>  <chr>  <chr>  #> 1 F1    1           0           1 1      1      2      1      4      1      #> 2 F1    2           3           3 2      0      2      0      0      0      #> 3 F1    3           0           3 1      1      1      1      3      1      #> 4 F1    4           4           1 1      1      3      1      0      0      #> 5 F1    5           0           1 1      1      0      1      1      0      #> 6 F1    6           1           1 1      1      4      3      0      0      #> # ℹ 92 more variables: site_9 <chr>, site_10 <chr>, site_11 <chr>, #> #   site_12 <chr>, site_13 <chr>, site_14 <chr>, site_15 <chr>, site_16 <chr>, #> #   site_17 <chr>, site_18 <chr>, site_19 <chr>, site_20 <chr>, site_21 <chr>, #> #   site_22 <chr>, site_23 <chr>, site_24 <chr>, site_25 <chr>, site_26 <chr>, #> #   site_27 <chr>, site_28 <chr>, site_29 <chr>, site_30 <chr>, site_31 <chr>, #> #   site_32 <chr>, site_33 <chr>, site_34 <chr>, site_35 <chr>, site_36 <chr>, #> #   site_37 <chr>, site_38 <chr>, site_39 <chr>, site_40 <chr>, … site <- as.wesp_site(wesp_data, site = 1) #> Questions F43, F44, F50 do not appear to have been filled out. #>  Please ensure this is valid. site #> A wesp_site object #>  #> Site:  site_1  #>  #> Incomplete Questions:  F43, F44, F50  #>   * Please ensure that it is valid to leave these questions unanswered. #>  #> Derived values: #>   *  AllWater = 0 #>   *  NeverWater = 0 #>   *  NoSeasonal = 0 #>   *  NoPersis = 0 #>   *  TempWet = 0 #>   *  AllPermW = 0 #>   *  HiFlucW = 0 #>   *  TooShallow = 0 #>   *  NoPond = 0 #>   *  NoDeepPonded = 0 #>   *  NoOW = 0 #>   *  NoOutletX = 0 #>   *  NoOutlet = 0 #>   *  Inflow = 0 #>   *  Disturb = 0 #>   *  FishFound = 0 #>   *  Moose = 0 #>   *  Beaver = 0 #>   *  Muskrat = 0 #>   *  Bear = 0 #>   *  Caribou = 0 #>   *  NoCA = 0 #>   *  Fishless = 0 #>   *  GDeco = 0 #>   *  CMeco = 1 #>   *  SIMeco = 0 #>   *  BPeco = 0 #>   *  TPeco = 0 #>   *  OutMap = 0 #>   *  S1_sum = 2 #>   *  S1_subscore = 0.17 #>   *  S2_sum = 0 #>   *  S2_subscore = 0 #>   *  S3_sum = 0 #>   *  S3_subscore = 0 #>   *  S4_sum = 5 #>   *  S4_subscore = 0.42 #>   *  S5_sum = 0 #>   *  S5_subscore = 0 #>   *  S6_sum = 0 #>   *  S6_subscore = 0 #>  #> Indicators: #> All indicators are NULL. Run `calc_indicators()` to calculate them. site <- calc_indicators(site) site #> A wesp_site object #>  #> Site:  site_1  #>  #> Incomplete Questions:  F43, F44, F50  #>   * Please ensure that it is valid to leave these questions unanswered. #>  #> Derived values: #>   *  AllWater = 0 #>   *  NeverWater = 0 #>   *  NoSeasonal = 0 #>   *  NoPersis = 0 #>   *  TempWet = 0 #>   *  AllPermW = 0 #>   *  HiFlucW = 0 #>   *  TooShallow = 0 #>   *  NoPond = 0 #>   *  NoDeepPonded = 0 #>   *  NoOW = 0 #>   *  NoOutletX = 0 #>   *  NoOutlet = 0 #>   *  Inflow = 0 #>   *  Disturb = 0 #>   *  FishFound = 0 #>   *  Moose = 0 #>   *  Beaver = 0 #>   *  Muskrat = 0 #>   *  Bear = 0 #>   *  Caribou = 0 #>   *  NoCA = 0 #>   *  Fishless = 0 #>   *  GDeco = 0 #>   *  CMeco = 1 #>   *  SIMeco = 0 #>   *  BPeco = 0 #>   *  TPeco = 0 #>   *  OutMap = 0 #>   *  S1_sum = 2 #>   *  S1_subscore = 0.17 #>   *  S2_sum = 0 #>   *  S2_subscore = 0 #>   *  S3_sum = 0 #>   *  S3_subscore = 0 #>   *  S4_sum = 5 #>   *  S4_subscore = 0.42 #>   *  S5_sum = 0 #>   *  S5_subscore = 0 #>   *  S6_sum = 0 #>   *  S6_subscore = 0 #>  #> Indicators: #>   * WS:   #>     - fun: 4.61  #>     - ben: 10  #>   * SR:   #>     - fun: 10  #>     - ben: 4.06  #>   * PR:   #>     - fun: 10  #>     - ben: 3.18  #>   * CP:   #>     - fun: 6.86  #>   * FR:   #>     - fun: 4.39  #>     - ben: 8.06  #>   * SENS:   #>     - fun: 6.24  #>   * STR:   #>     - fun: 7.96  #>   * NR:   #>     - fun: 10  #>     - ben: 5  #>   * APP:   #>     - fun: 4.81  #>     - ben: 4  #>   * PD:   #>     - fun: 5.59  #>     - ben: 5.45  #>   * KMH:   #>     - fun: 5.38  #>     - ben: 5.3  #>   * WB:   #>     - fun: 4.95  #>     - ben: 7.19  #>   * POL:   #>     - fun: 5.81  #>     - ben: 6  #>   * RSB:   #>     - fun: 4.96  #>     - ben: 5.58  #>   * OE:   #>     - fun: 0  #>   * AM:   #>     - fun: 3.17  #>     - ben: 6.03  #>   * FH:   #>     - fun: 2.92  #>     - ben: 4.98  #>   * SFTS:   #>     - fun: 1.81  #>     - ben: 2.07  #>   * CRI:   #>     - ben: 5.35  #>  #> * Retrieve indicator scores with `get_indicator_scores()` ind_scores <- get_indicator_scores(site)  ind_scores #> # A tibble: 19 × 4 #>    site   indicator   fun   ben #>    <chr>  <chr>     <dbl> <dbl> #>  1 site_1 WS         4.61 10    #>  2 site_1 SR        10     4.06 #>  3 site_1 PR        10     3.18 #>  4 site_1 CP         6.86 NA    #>  5 site_1 FR         4.39  8.06 #>  6 site_1 SENS       6.24 NA    #>  7 site_1 STR        7.96 NA    #>  8 site_1 NR        10     5    #>  9 site_1 APP        4.81  4.00 #> 10 site_1 PD         5.59  5.45 #> 11 site_1 KMH        5.38  5.30 #> 12 site_1 WB         4.95  7.19 #> 13 site_1 POL        5.81  6    #> 14 site_1 RSB        4.96  5.58 #> 15 site_1 OE         0    NA    #> 16 site_1 AM         3.17  6.03 #> 17 site_1 FH         2.92  4.98 #> 18 site_1 SFTS       1.81  2.07 #> 19 site_1 CRI       NA     5.35 get_responses(site) #> # A tibble: 498 × 4 #>    no    question                           response_no value #>    <chr> <chr>                              <chr>       <dbl> #>  1 F1    Vegetation Height & Form Diversity F1_1            0 #>  2 F1    Vegetation Height & Form Diversity F1_2            3 #>  3 F1    Vegetation Height & Form Diversity F1_3            0 #>  4 F1    Vegetation Height & Form Diversity F1_4            4 #>  5 F1    Vegetation Height & Form Diversity F1_5            0 #>  6 F1    Vegetation Height & Form Diversity F1_6            1 #>  7 F10   Dense Moss Extent                  F10_1           1 #>  8 F10   Dense Moss Extent                  F10_2           0 #>  9 F10   Dense Moss Extent                  F10_3           0 #> 10 F10   Dense Moss Extent                  F10_4           0 #> # ℹ 488 more rows get_derived_values(site) #> # A tibble: 41 × 2 #>    name         value #>    <chr>        <dbl> #>  1 AllWater         0 #>  2 NeverWater       0 #>  3 NoSeasonal       0 #>  4 NoPersis         0 #>  5 TempWet          0 #>  6 AllPermW         0 #>  7 HiFlucW          0 #>  8 TooShallow       0 #>  9 NoPond           0 #> 10 NoDeepPonded     0 #> # ℹ 31 more rows"},{"path":"https://bcwf-wetlands.github.io/wespr/index.html","id":"calculating-multiple-site-scores","dir":"","previous_headings":"","what":"Calculating multiple site scores","title":"Calculate ecosystem function and benefit scores for wetlands","text":"cases wish calculate indicator scores multiple site. can done calculate_multi_site() function. requires data firstly loaded using load_wesp_data() function. can iterate sites.","code":"calculate_multi_site(wesp_data)"},{"path":[]},{"path":"https://bcwf-wetlands.github.io/wespr/index.html","id":"anatomy-of-the-wesp_site-object","dir":"","previous_headings":"","what":"Anatomy of the wesp_site object","title":"Calculate ecosystem function and benefit scores for wetlands","text":"mentioned , large, complex object, almost always best interact wesp_site object via provided functions. functionality missing please open issue. four elements: first three (site_name, questions, derived_values) populated wesp_site object created, indicators element just placeholder, calc_indicators() run:","code":"length(site) #> [1] 4 names(site) #> [1] \"site_name\"      \"questions\"      \"derived_values\" \"indicators\" site$site_name #> [1] \"site_1\"  # The questions element is large and complex, so we will just show the names: names(site$questions) #>   [1] \"F1\"   \"F10\"  \"F11\"  \"F12\"  \"F13\"  \"F14\"  \"F15\"  \"F16\"  \"F17\"  \"F18\"  #>  [11] \"F19\"  \"F2\"   \"F20\"  \"F21\"  \"F22\"  \"F23\"  \"F24\"  \"F25\"  \"F26\"  \"F27\"  #>  [21] \"F28\"  \"F29\"  \"F3\"   \"F30\"  \"F31\"  \"F32\"  \"F33\"  \"F34\"  \"F35\"  \"F36\"  #>  [31] \"F37\"  \"F38\"  \"F39\"  \"F4\"   \"F40\"  \"F41\"  \"F42\"  \"F43\"  \"F44\"  \"F45\"  #>  [41] \"F46a\" \"F46b\" \"F47\"  \"F48\"  \"F49\"  \"F5\"   \"F50\"  \"F51\"  \"F52\"  \"F53\"  #>  [51] \"F54\"  \"F55\"  \"F56\"  \"F57\"  \"F58\"  \"F59\"  \"F6\"   \"F7\"   \"F8\"   \"F9\"   #>  [61] \"OF1\"  \"OF10\" \"OF11\" \"OF12\" \"OF13\" \"OF14\" \"OF15\" \"OF16\" \"OF17\" \"OF18\" #>  [71] \"OF19\" \"OF2\"  \"OF20\" \"OF21\" \"OF22\" \"OF23\" \"OF24\" \"OF25\" \"OF26\" \"OF27\" #>  [81] \"OF28\" \"OF29\" \"OF3\"  \"OF30\" \"OF31\" \"OF32\" \"OF33\" \"OF34\" \"OF35\" \"OF36\" #>  [91] \"OF37\" \"OF38\" \"OF39\" \"OF4\"  \"OF40\" \"OF41\" \"OF42\" \"OF43\" \"OF44\" \"OF5\"  #> [101] \"OF6\"  \"OF7\"  \"OF8\"  \"OF9\"  \"S1\"   \"S2\"   \"S3\"   \"S4\"   \"S5\"   \"S6\"  site$derived_values #>     AllWater   NeverWater   NoSeasonal     NoPersis      TempWet     AllPermW  #>    0.0000000    0.0000000    0.0000000    0.0000000    0.0000000    0.0000000  #>      HiFlucW   TooShallow       NoPond NoDeepPonded         NoOW    NoOutletX  #>    0.0000000    0.0000000    0.0000000    0.0000000    0.0000000    0.0000000  #>     NoOutlet       Inflow      Disturb    FishFound        Moose       Beaver  #>    0.0000000    0.0000000    0.0000000    0.0000000    0.0000000    0.0000000  #>      Muskrat         Bear      Caribou         NoCA     Fishless        GDeco  #>    0.0000000    0.0000000    0.0000000    0.0000000    0.0000000    0.0000000  #>        CMeco       SIMeco        BPeco        TPeco       OutMap       S1_sum  #>    1.0000000    0.0000000    0.0000000    0.0000000    0.0000000    2.0000000  #>  S1_subscore       S2_sum  S2_subscore       S3_sum  S3_subscore       S4_sum  #>    0.1666667    0.0000000    0.0000000    0.0000000    0.0000000    5.0000000  #>  S4_subscore       S5_sum  S5_subscore       S6_sum  S6_subscore  #>    0.4166667    0.0000000    0.0000000    0.0000000    0.0000000  site$indicators #> $ws #> $ws$fun #> Score: 4.605741  #>   Subscores:  #>     - subsurf: 0.46 #>     - livestore: 0.6 #>     - friction: 0.62 #>  #> $ws$ben #> Score: 10 #>  #> $sr #> $sr$fun #> Score: 10  #>   Subscores:  #>     - livestore: 0.62 #>     - dryintercept: 0.17 #>     - wetintercept: 0.65 #>     - connectiv: 0.2 #>  #> $sr$ben #> Score: 4.06 #>  #> $pr #> $pr$fun #> Score: 10  #>   Subscores:  #>     - interceptdry: 0.31 #>     - interceptwet: 0.46 #>     - connec: 0.67 #>     - adsorb: 0.7 #>     - desorb: 0.49 #>  #> $pr$ben #> Score: 3.18 #>  #> $cp #> $cp$fun #> Score: 6.86 #>  #> $fr #> $fr$fun #> Score: 4.39 #> $fr$ben #> Score: 8.06 #>  #> $sens #> $sens$fun #> Score: 6.237939  #>   Subscores:  #>     - abiosens: 1 #>     - biosens: 0.62 #>     - colonizer: 0.45 #>     - growrate: 0.42 #>  #>  #> $str #> $str$fun #> Score: 7.959184  #>   Subscores:  #>     - hydrostress: 0.17 #>     - wqstress: 0.13 #>     - connecstress: 0.8 #>  #>  #> $nr #> $nr$fun #> Score: 10  #>   Subscores:  #>     - warmth: 0.51 #>     - intercept: 0.37 #>     - connecc: 0.67 #>     - organic: 0.7 #>     - redox: 0.9 #>  #> $nr$ben #> Score: 5 #>  #> $app #> $app$fun #> Score: 4.810678  #>   Subscores:  #>     - npinput: 0.12 #>     - npcycling: 0.74 #>     - templight: 0.68 #>     - stressors: 0.77 #>  #> $app$ben #> Score: 4 #>  #> $pd #> $pd$fun #> Score: 5.592124  #>   Subscores:  #>     - spparea: 0.56 #>     - vrichness: 0.6 #>     - aqfertilpd: 0.48 #>     - vscape: 0.58 #>     - stresspd: 0.54 #>  #> $pd$ben #> Score: 5.45 #>  #> $kmh #> $kmh$fun #> Score: 5.384443  #>   Subscores:  #>     - beaverhab: 0.45 #>     - muskrathab: 0.44 #>     - moosehab: 0.75 #>     - caribouhab: 0.35 #>     - bearhab: 0.7 #>  #> $kmh$ben #> Score: 5.3 #>  #> $wb #> $wb$fun #> Score: 4.952343  #>   Subscores:  #>     - lscape: 0.36 #>     - hydro: 0.55 #>     - produc: 0.48 #>     - struc: 0.45 #>  #> $wb$ben #> Score: 7.19 #>  #> $pol #> $pol$fun #> Score: 5.809951  #>   Subscores:  #>     - pollen: 0.56 #>     - nestsites: 0.63 #>     - stress: 0.54 #>  #> $pol$ben #> Score: 6 #>  #> $rsb #> $rsb$fun #> Score: 4.956015  #>   Subscores:  #>     - hydrosize: 0.52 #>     - struc: 0.65 #>     - foods: 0.49 #>     - habs: 0.5 #>     - lscape: 0.28 #>     - nopred: 0.33 #>  #> $rsb$ben #> Score: 5.58 #>  #> $oe #> $oe$fun #> Score: 0  #>   Subscores:  #>     - histaccum: 0.69 #>     - productiv: 0.48 #>     - exportpot: 0.5 #>  #>  #> $am #> $am$fun #> Score: 3.165836  #>   Subscores:  #>     - waterscape: 0.11 #>     - hydro: 0.54 #>     - aqstruc: 0.71 #>     - terrstruc: 0.43 #>     - biostress: 0.41 #>  #> $am$ben #> Score: 6.03 #>  #> $fh #> $fh$fun #> Score: 2.920322  #>   Subscores:  #>     - hydro: 0.47 #>     - struc: 0.08 #>     - nooxyrisk: 0.5 #>     - nostress: 0.31 #>  #> $fh$ben #> Score: 4.98 #>  #> $sfts #> $sfts$fun #> Score: 1.808248  #>   Subscores:  #>     - shadedsurf: 0.44 #>     - surfacestorage: 0.14 #>     - groundwater: 0.33 #>  #> $sfts$ben #> Score: 2.07 #>  #> $cri #> $cri$ben #> Score: 5.35"},{"path":[]},{"path":"https://bcwf-wetlands.github.io/wespr/index.html","id":"updating-internal-data","dir":"","previous_headings":"Development","what":"Updating internal data","title":"Calculate ecosystem function and benefit scores for wetlands","text":"wespr package contains two internal datasets facilitate question validation indicator calculations: question_metadata indicator_weightings. updated : Update Google Sheet : https://docs.google.com/spreadsheets/d/1l2h7Z65H5z0cKv_gvorxkT6k9LC7ZKLS/edit#gid=924841838 (need authorized edit document) Run script data-raw/internal-data.R Reload/reinstall package. Run devtools::check() make sure changes made Google Sheet haven’t broken existing behaviour. Commit changes R/sysdata.rda (file contains datasets)","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/as.wesp_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data.frame of WESP question responses to a wesp_site — as.wesp_site","title":"Convert a data.frame of WESP question responses to a wesp_site — as.wesp_site","text":"Read data.frame read load_wesp_data() convert wesp_site object, preparation calculating indicators. function also calculates various \"derived\" values used indicator calculations.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/as.wesp_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data.frame of WESP question responses to a wesp_site — as.wesp_site","text":"","code":"as.wesp_site(data, site = NULL)"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/as.wesp_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data.frame of WESP question responses to a wesp_site — as.wesp_site","text":"data data.frame questions responses, ideally created reading data load_wesp_data(). Contains columns q_no, response_no, one site_[x] columns. site number, name column data indicating site calculate, one site data. Defaults first site_[x] column.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/as.wesp_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data.frame of WESP question responses to a wesp_site — as.wesp_site","text":"object type wesp_site","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calc_indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Indicators for WESP assessment site — calc_indicators","title":"Calculate Indicators for WESP assessment site — calc_indicators","text":"Calculate Function Benefit indicators site.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calc_indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Indicators for WESP assessment site — calc_indicators","text":"","code":"calc_indicators(site)"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calc_indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Indicators for WESP assessment site — calc_indicators","text":"site object type wesp_site, created .wesp_site().","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calc_indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Indicators for WESP assessment site — calc_indicators","text":"wesp_site object indicators calculated.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_jenks_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Jenks Breaks — calculate_jenks_score","title":"Calculate Jenks Breaks — calculate_jenks_score","text":"Calculate Jenks Breaks","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_jenks_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Jenks Breaks — calculate_jenks_score","text":"","code":"calculate_jenks_score(   wespdata,   sites = NULL,   out_dir,   out_name = \"wesp_scores.csv\" )"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_jenks_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Jenks Breaks — calculate_jenks_score","text":"wespdata data frame containing formatted wesp data. output load_wesp_data() sites numeric number sites specific sites calculated. default NULL, include sites calculation out_dir character string path location output file saved out_name character string name output file. Default values \"wesp_scores.csv\"","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_jenks_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Jenks Breaks — calculate_jenks_score","text":"dateframe compiled raw, normalised jenks break values site ecosystem function benefit.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_jenks_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Jenks Breaks — calculate_jenks_score","text":"","code":"if (FALSE) { # \\dontrun{ wespdata <- load_wesp_data(system.file(\"input_data/wetFlat_20240130.csv\", package = \"wespr\")) calculate_jenks_score(wespdata, out_dir = \"temp\",  out_name = \"wesp_scores.csv\") } # }"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_multi_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate indicators for multiple sites — calculate_multi_site","title":"Calculate indicators for multiple sites — calculate_multi_site","text":"Calculate indicators multiple sites","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_multi_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate indicators for multiple sites — calculate_multi_site","text":"","code":"calculate_multi_site(wespdata, sites = NULL)"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_multi_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate indicators for multiple sites — calculate_multi_site","text":"wespdata data frame containing formatted wesp data. output load_wesp_data() sites numeric number sites specific sites calculated. default NULL, include sites calculation","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_multi_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate indicators for multiple sites — calculate_multi_site","text":"dataframe raw values site ecosystem service benefit.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/calculate_multi_site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate indicators for multiple sites — calculate_multi_site","text":"","code":"if (FALSE) { # \\dontrun{ wespdata <- load_wesp_data(system.file(\"input_data/wetFlat_20240130.csv\", package = \"wespr\")) calculate_multi_site(wespdata) } # }"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/check_indata.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the input data for basic QA — check_indata","title":"Check the input data for basic QA — check_indata","text":"Check input data basic QA","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/check_indata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the input data for basic QA — check_indata","text":"","code":"check_indata(indata)"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/check_indata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the input data for basic QA — check_indata","text":"indata path input data","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/check_indata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the input data for basic QA — check_indata","text":"messages console","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/check_indata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the input data for basic QA — check_indata","text":"","code":"if (FALSE) { # \\dontrun{ indata <- fs::path(\"inst/input_data/wetFlat_20250325.csv\") check_indata(indata) } # }"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/combine_rawdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine all types of raw data — combine_rawdata","title":"Combine all types of raw data — combine_rawdata","text":"Combine types raw data","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/combine_rawdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine all types of raw data — combine_rawdata","text":"","code":"combine_rawdata(   field_data,   office_data,   EcoP = \"GD\",   write_subfiles = TRUE,   out_dir = \"temp\",   overwrite = FALSE )"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/combine_rawdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine all types of raw data — combine_rawdata","text":"field_data path field data office_data path office data EcoP character string specifying region. Default = 'GD' write_subfiles logical value specifying whether write subfiles. Default = TRUE out_dir character string specifying output directory. overwrite logical value specifying whether overwrite output files. Default = FALSE","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/combine_rawdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine all types of raw data — combine_rawdata","text":"tibble combined data","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/combine_rawdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine all types of raw data — combine_rawdata","text":"","code":"if (FALSE) { # \\dontrun{ combine_rawdata(   field_data = fs::path(\"inst/input_data/raw\", \"field_survey123_edited.xls\"),   office_data = fs::path(\"inst/input_data/raw\", \"scripted_office.xlsx\"),   EcoP = \"GD\",   write_subfiles = FALSE,   out_dir = \"temp\",   overwrite = TRUE ) } # }"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_derived_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all derived values from a wesp_site object as a data.frame. — get_derived_values","title":"Retrieve all derived values from a wesp_site object as a data.frame. — get_derived_values","text":"Retrieve derived values wesp_site object data.frame.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_derived_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all derived values from a wesp_site object as a data.frame. — get_derived_values","text":"","code":"get_derived_values(site, ...)"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_derived_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve all derived values from a wesp_site object as a data.frame. — get_derived_values","text":"site wesp_site object ... ignored now","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_derived_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve all derived values from a wesp_site object as a data.frame. — get_derived_values","text":"data.frame responses","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_indicator_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve indicator scores from a wesp_site object as a data.frame. — get_indicator_scores","title":"Retrieve indicator scores from a wesp_site object as a data.frame. — get_indicator_scores","text":"Retrieve indicator scores wesp_site object data.frame.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_indicator_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve indicator scores from a wesp_site object as a data.frame. — get_indicator_scores","text":"","code":"get_indicator_scores(site, ...)"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_indicator_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve indicator scores from a wesp_site object as a data.frame. — get_indicator_scores","text":"site wesp_site object, updated calc_indicators() ... ignored now","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_indicator_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve indicator scores from a wesp_site object as a data.frame. — get_indicator_scores","text":"data.frame indicator scores","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all input responses from a wesp_site object as a data.frame. — get_responses","title":"Retrieve all input responses from a wesp_site object as a data.frame. — get_responses","text":"Retrieve input responses wesp_site object data.frame.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all input responses from a wesp_site object as a data.frame. — get_responses","text":"","code":"get_responses(site, ...)"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve all input responses from a wesp_site object as a data.frame. — get_responses","text":"site wesp_site object ... ignored now","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/get_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve all input responses from a wesp_site object as a data.frame. — get_responses","text":"data.frame responses","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/load_wesp_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the data containing the responses to WESP form — load_wesp_data","title":"Load the data containing the responses to WESP form — load_wesp_data","text":"file usually output R script https://github.com/BCWF-Wetlands/WESP_Calculator, includes answers Office (), Field (F), Stressor (S) questions.","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/load_wesp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the data containing the responses to WESP form — load_wesp_data","text":"","code":"load_wesp_data(path)"},{"path":"https://bcwf-wetlands.github.io/wespr/reference/load_wesp_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load the data containing the responses to WESP form — load_wesp_data","text":"path path csv","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/load_wesp_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load the data containing the responses to WESP form — load_wesp_data","text":"data.frame responses","code":""},{"path":"https://bcwf-wetlands.github.io/wespr/reference/wespr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"wespr: Calculate ecosystem function and benefit scores for wetlands — wespr-package","title":"wespr: Calculate ecosystem function and benefit scores for wetlands — wespr-package","text":"Takes responses predetermined set office field-based questions, validates responses, calculates indicator scores various aspects wetland functions benefits.","code":""},{"path":[]},{"path":"https://bcwf-wetlands.github.io/wespr/reference/wespr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"wespr: Calculate ecosystem function and benefit scores for wetlands — wespr-package","text":"Maintainer: Genevieve Perkins gperkins@ninoxconsulting.ca Authors: Andy Teucher andy.teucher@gmail.com (ORCID) contributors: BC Wildlife Federation [copyright holder]","code":""}]
